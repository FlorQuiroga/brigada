//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Clases.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TropaNerdEntities : DbContext
    {
        public TropaNerdEntities()
            : base("name=TropaNerdEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Domicilio> Domicilio { get; set; }
        public virtual DbSet<Areas> Areas { get; set; }
        public virtual DbSet<Encuestas> Encuestas { get; set; }
        public virtual DbSet<PedidoReparacion> PedidoReparacion { get; set; }
        public virtual DbSet<PedidoReparacionDetalle> PedidoReparacionDetalle { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Tecnico> TecnicoSet { get; set; }
    
        public virtual ObjectResult<GetValidaUsuario> ValidaUsuario(string usuario, string pass)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetValidaUsuario>("ValidaUsuario", usuarioParameter, passParameter);
        }
    
        public virtual ObjectResult<getAreasALL> getAreasALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAreasALL>("getAreasALL");
        }
    
        public virtual ObjectResult<GetArticulosByArea> GetArticulosByArea(Nullable<int> areaID)
        {
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("AreaID", areaID) :
                new ObjectParameter("AreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetArticulosByArea>("GetArticulosByArea", areaIDParameter);
        }
    
        public virtual int ClientesPerfilUPD(string nombre, string apellido, string mail, string telefono, string razonSocial, string tipoFactura, string calle, string calleNro, string codigoPostal, string localidad, string provincia, string pais, Nullable<int> clienteID, Nullable<int> domicilioID, string pass)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var tipoFacturaParameter = tipoFactura != null ?
                new ObjectParameter("TipoFactura", tipoFactura) :
                new ObjectParameter("TipoFactura", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var calleNroParameter = calleNro != null ?
                new ObjectParameter("CalleNro", calleNro) :
                new ObjectParameter("CalleNro", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var localidadParameter = localidad != null ?
                new ObjectParameter("Localidad", localidad) :
                new ObjectParameter("Localidad", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var clienteIDParameter = clienteID.HasValue ?
                new ObjectParameter("ClienteID", clienteID) :
                new ObjectParameter("ClienteID", typeof(int));
    
            var domicilioIDParameter = domicilioID.HasValue ?
                new ObjectParameter("DomicilioID", domicilioID) :
                new ObjectParameter("DomicilioID", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClientesPerfilUPD", nombreParameter, apellidoParameter, mailParameter, telefonoParameter, razonSocialParameter, tipoFacturaParameter, calleParameter, calleNroParameter, codigoPostalParameter, localidadParameter, provinciaParameter, paisParameter, clienteIDParameter, domicilioIDParameter, passParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PedidoReparacionDetalleINS(Nullable<int> articuloID, string latitud, string longitud, Nullable<int> areasID)
        {
            var articuloIDParameter = articuloID.HasValue ?
                new ObjectParameter("ArticuloID", articuloID) :
                new ObjectParameter("ArticuloID", typeof(int));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(string));
    
            var areasIDParameter = areasID.HasValue ?
                new ObjectParameter("AreasID", areasID) :
                new ObjectParameter("AreasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PedidoReparacionDetalleINS", articuloIDParameter, latitudParameter, longitudParameter, areasIDParameter);
        }
    
        public virtual int PedidoReparacionINS(Nullable<int> clienteID, Nullable<int> domicilioID, string descripcion, Nullable<int> pedidoReparacionDetalleID, string horario)
        {
            var clienteIDParameter = clienteID.HasValue ?
                new ObjectParameter("ClienteID", clienteID) :
                new ObjectParameter("ClienteID", typeof(int));
    
            var domicilioIDParameter = domicilioID.HasValue ?
                new ObjectParameter("DomicilioID", domicilioID) :
                new ObjectParameter("DomicilioID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var pedidoReparacionDetalleIDParameter = pedidoReparacionDetalleID.HasValue ?
                new ObjectParameter("PedidoReparacionDetalleID", pedidoReparacionDetalleID) :
                new ObjectParameter("PedidoReparacionDetalleID", typeof(int));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PedidoReparacionINS", clienteIDParameter, domicilioIDParameter, descripcionParameter, pedidoReparacionDetalleIDParameter, horarioParameter);
        }
    
        public virtual ObjectResult<string> ClienteINS(string nombre, string apellido, string mail, string telefono, string tipoDocumentoID, string nroDocumento, string razonSocial, Nullable<int> domicilioID, string tipofacturacion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var tipoDocumentoIDParameter = tipoDocumentoID != null ?
                new ObjectParameter("TipoDocumentoID", tipoDocumentoID) :
                new ObjectParameter("TipoDocumentoID", typeof(string));
    
            var nroDocumentoParameter = nroDocumento != null ?
                new ObjectParameter("NroDocumento", nroDocumento) :
                new ObjectParameter("NroDocumento", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("razonSocial", razonSocial) :
                new ObjectParameter("razonSocial", typeof(string));
    
            var domicilioIDParameter = domicilioID.HasValue ?
                new ObjectParameter("DomicilioID", domicilioID) :
                new ObjectParameter("DomicilioID", typeof(int));
    
            var tipofacturacionParameter = tipofacturacion != null ?
                new ObjectParameter("Tipofacturacion", tipofacturacion) :
                new ObjectParameter("Tipofacturacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ClienteINS", nombreParameter, apellidoParameter, mailParameter, telefonoParameter, tipoDocumentoIDParameter, nroDocumentoParameter, razonSocialParameter, domicilioIDParameter, tipofacturacionParameter);
        }
    
        public virtual ObjectResult<ClientesPerfil> ClientesPerfil(Nullable<int> clienteID)
        {
            var clienteIDParameter = clienteID.HasValue ?
                new ObjectParameter("clienteID", clienteID) :
                new ObjectParameter("clienteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientesPerfil>("ClientesPerfil", clienteIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TecnicoINS(string nombre, string apellido, string mail, string telefono, string tipoDocumento, string nroDocumento, Nullable<int> domicilioID, string imagen1, string imagen2)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var nroDocumentoParameter = nroDocumento != null ?
                new ObjectParameter("NroDocumento", nroDocumento) :
                new ObjectParameter("NroDocumento", typeof(string));
    
            var domicilioIDParameter = domicilioID.HasValue ?
                new ObjectParameter("DomicilioID", domicilioID) :
                new ObjectParameter("DomicilioID", typeof(int));
    
            var imagen1Parameter = imagen1 != null ?
                new ObjectParameter("imagen1", imagen1) :
                new ObjectParameter("imagen1", typeof(string));
    
            var imagen2Parameter = imagen2 != null ?
                new ObjectParameter("imagen2", imagen2) :
                new ObjectParameter("imagen2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TecnicoINS", nombreParameter, apellidoParameter, mailParameter, telefonoParameter, tipoDocumentoParameter, nroDocumentoParameter, domicilioIDParameter, imagen1Parameter, imagen2Parameter);
        }
    
        public virtual ObjectResult<GetPerfilTecnico> GetPerfilTecnico(Nullable<int> tecnicoID)
        {
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("tecnicoID", tecnicoID) :
                new ObjectParameter("tecnicoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPerfilTecnico>("GetPerfilTecnico", tecnicoIDParameter);
        }
    
        public virtual int TecnicosPerfilUPD(string nombre, string apellido, string mail, string telefono, string imagen1, string imagen2, string calle, string calleNro, string codigoPostal, string localidad, string provincia, string pais, Nullable<int> tecnicoID, Nullable<int> domicilioID, string tipoDoc, string nroDoc, string pass, Nullable<int> baja)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var imagen1Parameter = imagen1 != null ?
                new ObjectParameter("imagen1", imagen1) :
                new ObjectParameter("imagen1", typeof(string));
    
            var imagen2Parameter = imagen2 != null ?
                new ObjectParameter("imagen2", imagen2) :
                new ObjectParameter("imagen2", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var calleNroParameter = calleNro != null ?
                new ObjectParameter("CalleNro", calleNro) :
                new ObjectParameter("CalleNro", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var localidadParameter = localidad != null ?
                new ObjectParameter("Localidad", localidad) :
                new ObjectParameter("Localidad", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("TecnicoID", tecnicoID) :
                new ObjectParameter("TecnicoID", typeof(int));
    
            var domicilioIDParameter = domicilioID.HasValue ?
                new ObjectParameter("DomicilioID", domicilioID) :
                new ObjectParameter("DomicilioID", typeof(int));
    
            var tipoDocParameter = tipoDoc != null ?
                new ObjectParameter("TipoDoc", tipoDoc) :
                new ObjectParameter("TipoDoc", typeof(string));
    
            var nroDocParameter = nroDoc != null ?
                new ObjectParameter("nroDoc", nroDoc) :
                new ObjectParameter("nroDoc", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var bajaParameter = baja.HasValue ?
                new ObjectParameter("baja", baja) :
                new ObjectParameter("baja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TecnicosPerfilUPD", nombreParameter, apellidoParameter, mailParameter, telefonoParameter, imagen1Parameter, imagen2Parameter, calleParameter, calleNroParameter, codigoPostalParameter, localidadParameter, provinciaParameter, paisParameter, tecnicoIDParameter, domicilioIDParameter, tipoDocParameter, nroDocParameter, passParameter, bajaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> PredidoTecnicoINS(Nullable<int> pedidoReparacionID, Nullable<int> tecnicoID)
        {
            var pedidoReparacionIDParameter = pedidoReparacionID.HasValue ?
                new ObjectParameter("PedidoReparacionID", pedidoReparacionID) :
                new ObjectParameter("PedidoReparacionID", typeof(int));
    
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("tecnicoID", tecnicoID) :
                new ObjectParameter("tecnicoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("PredidoTecnicoINS", pedidoReparacionIDParameter, tecnicoIDParameter);
        }
    
        public virtual ObjectResult<GetPedidosDisponibles> GetPedidosDisponibles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPedidosDisponibles>("GetPedidosDisponibles");
        }
    
        public virtual ObjectResult<getTecnicosALL> getTecnicosALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTecnicosALL>("getTecnicosALL");
        }
    
        public virtual int TomarPedido(Nullable<int> pedidoID)
        {
            var pedidoIDParameter = pedidoID.HasValue ?
                new ObjectParameter("PedidoID", pedidoID) :
                new ObjectParameter("PedidoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TomarPedido", pedidoIDParameter);
        }
    
        public virtual ObjectResult<GetPedidosACerrar> GetPedidosACerrar(Nullable<int> tecnicoID)
        {
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("tecnicoID", tecnicoID) :
                new ObjectParameter("tecnicoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPedidosACerrar>("GetPedidosACerrar", tecnicoIDParameter);
        }
    
        public virtual int CerrarPedido(Nullable<int> pedidoID)
        {
            var pedidoIDParameter = pedidoID.HasValue ?
                new ObjectParameter("PedidoID", pedidoID) :
                new ObjectParameter("PedidoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CerrarPedido", pedidoIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RetiroINS(Nullable<int> pedidoReparacionID, string motivo, string detalle)
        {
            var pedidoReparacionIDParameter = pedidoReparacionID.HasValue ?
                new ObjectParameter("PedidoReparacionID", pedidoReparacionID) :
                new ObjectParameter("PedidoReparacionID", typeof(int));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("Motivo", motivo) :
                new ObjectParameter("Motivo", typeof(string));
    
            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RetiroINS", pedidoReparacionIDParameter, motivoParameter, detalleParameter);
        }
    
        public virtual ObjectResult<GetRetirosDisponibles> GetRetirosDisponibles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRetirosDisponibles>("GetRetirosDisponibles");
        }
    
        public virtual int AsignaRetiroTecnico(Nullable<int> pedidoRetirado, Nullable<int> tecnicoID)
        {
            var pedidoRetiradoParameter = pedidoRetirado.HasValue ?
                new ObjectParameter("PedidoRetirado", pedidoRetirado) :
                new ObjectParameter("PedidoRetirado", typeof(int));
    
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("tecnicoID", tecnicoID) :
                new ObjectParameter("tecnicoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignaRetiroTecnico", pedidoRetiradoParameter, tecnicoIDParameter);
        }
    
        public virtual int FinalizaRetiroTecnico(Nullable<int> pedidoRetirado)
        {
            var pedidoRetiradoParameter = pedidoRetirado.HasValue ?
                new ObjectParameter("PedidoRetirado", pedidoRetirado) :
                new ObjectParameter("PedidoRetirado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FinalizaRetiroTecnico", pedidoRetiradoParameter);
        }
    
        public virtual ObjectResult<GetClientesAll> GetClientesAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClientesAll>("GetClientesAll");
        }
    
        public virtual ObjectResult<GetRetirosaCerrar> GetRetirosaCerrar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRetirosaCerrar>("GetRetirosaCerrar");
        }
    
        public virtual ObjectResult<Nullable<int>> getPedidosAlerta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getPedidosAlerta");
        }
    
        public virtual ObjectResult<GetPedidosBYtecnicoID> GetPedidosBYtecnicoID(Nullable<int> tecnicoID)
        {
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("TecnicoID", tecnicoID) :
                new ObjectParameter("TecnicoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPedidosBYtecnicoID>("GetPedidosBYtecnicoID", tecnicoIDParameter);
        }
    
        public virtual ObjectResult<GetPedidosDescripcion> GetPedidosDescripcion(Nullable<int> pedidoID)
        {
            var pedidoIDParameter = pedidoID.HasValue ?
                new ObjectParameter("PedidoID", pedidoID) :
                new ObjectParameter("PedidoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPedidosDescripcion>("GetPedidosDescripcion", pedidoIDParameter);
        }
    
        public virtual ObjectResult<GetPedidosCerrados> GetPedidosCerrados(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechahasta)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(System.DateTime));
    
            var fechahastaParameter = fechahasta.HasValue ?
                new ObjectParameter("fechahasta", fechahasta) :
                new ObjectParameter("fechahasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPedidosCerrados>("GetPedidosCerrados", fechaDesdeParameter, fechahastaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getAlertaClientes(Nullable<int> clienteID)
        {
            var clienteIDParameter = clienteID.HasValue ?
                new ObjectParameter("ClienteID", clienteID) :
                new ObjectParameter("ClienteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getAlertaClientes", clienteIDParameter);
        }
    
        public virtual ObjectResult<GetClientesEncuesats> GetClientesEncuesats(Nullable<int> tecnicoid)
        {
            var tecnicoidParameter = tecnicoid.HasValue ?
                new ObjectParameter("tecnicoid", tecnicoid) :
                new ObjectParameter("tecnicoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClientesEncuesats>("GetClientesEncuesats", tecnicoidParameter);
        }
    
        public virtual ObjectResult<GetTecnicosEncuesats> GetTecnicosEncuesats(Nullable<int> clienteiD)
        {
            var clienteiDParameter = clienteiD.HasValue ?
                new ObjectParameter("ClienteiD", clienteiD) :
                new ObjectParameter("ClienteiD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTecnicosEncuesats>("GetTecnicosEncuesats", clienteiDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getAlertaTecnicos(Nullable<int> tecnicoID)
        {
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("TecnicoID", tecnicoID) :
                new ObjectParameter("TecnicoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getAlertaTecnicos", tecnicoIDParameter);
        }
    
        public virtual ObjectResult<string> UsuariosINS(string nombre, string apellido, Nullable<int> clienteiID, Nullable<int> tecnicoID)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var clienteiIDParameter = clienteiID.HasValue ?
                new ObjectParameter("ClienteiID", clienteiID) :
                new ObjectParameter("ClienteiID", typeof(int));
    
            var tecnicoIDParameter = tecnicoID.HasValue ?
                new ObjectParameter("TecnicoID", tecnicoID) :
                new ObjectParameter("TecnicoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UsuariosINS", nombreParameter, apellidoParameter, clienteiIDParameter, tecnicoIDParameter);
        }
    
        public virtual ObjectResult<getAdministradorPerfil> getAdministradorPerfil(Nullable<int> administradorID)
        {
            var administradorIDParameter = administradorID.HasValue ?
                new ObjectParameter("AdministradorID", administradorID) :
                new ObjectParameter("AdministradorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAdministradorPerfil>("getAdministradorPerfil", administradorIDParameter);
        }
    
        public virtual int UpdateAdministrador(Nullable<int> adminID, string pass, Nullable<int> baja)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var bajaParameter = baja.HasValue ?
                new ObjectParameter("Baja", baja) :
                new ObjectParameter("Baja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAdministrador", adminIDParameter, passParameter, bajaParameter);
        }
    }
}
